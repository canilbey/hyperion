version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./src/backend:/app/backend
      - uploads:/uploads
    environment:
      - CORE_DATABASE_URL=postgresql://hyperion:hyperion123@db:5432/hyperion
      - CORE_REDIS_URL=redis://redis:6379
      - CORE_UPLOAD_DIR=/uploads
      - CORE_OPENROUTER_API_KEY=${OPENROUTER_API_KEY:-}
      - CORE_OPENROUTER_MODEL=${OPENROUTER_MODEL:-openai/gpt-3.5-turbo}
      - COOKIE_SECURE=false
      - COOKIE_DOMAIN=localhost
      - JWT_SECRET=${JWT_SECRET:-changeme-super-secret}
      - JWT_ALGORITHM=HS256
      - JWT_EXPIRY_MINUTES=30
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # frontend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.frontend
  #   ports:
  #     - "3000:80"
  #   depends_on:
  #     backend:
  #       condition: service_healthy
  #   networks:
  #     - hyperion-network

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=hyperion
      - POSTGRES_PASSWORD=hyperion123
      - POSTGRES_DB=hyperion
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hyperion -d hyperion"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:
  redis_data:
  uploads:

networks:
  hyperion-network:
    driver: bridge