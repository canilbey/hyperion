services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      - milvus
      - redis
      - otel-collector
    networks:
      - app-network
      - monitoring-network
    command: ["gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8000", "--timeout", "120", "app.main:app"]

  frontend:
    build: ./frontend
    ports:
      - "3003:3000"
    depends_on:
      - backend

  milvus:
    image: milvusdb/milvus:v2.3.3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:19530/health"]
      interval: 60s
      timeout: 30s
      retries: 5
    ports:
      - "19530:19530"
    volumes:
      - milvus_data:/var/lib/milvus
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 4G

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - otel-collector
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          memory: 512M

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./monitoring/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317"
      - "4318:4318"

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki

  tempo:
    image: grafana/tempo:latest
    ports:
      - "3200:3200"
      - "9411:9411"

  redis:
    image: redis:alpine
    command: redis-server --requirepass $REDIS_PASSWORD
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$$REDIS_PASSWORD", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M

volumes:
  milvus_data:
  grafana_data:
  loki_data:
  redis_data:

networks:
  app-network:
    driver: bridge
  monitoring-network:
    driver: bridge